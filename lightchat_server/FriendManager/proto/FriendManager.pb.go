// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.1
// source: proto/FriendManager.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewFriendRequestState int32

const (
	NewFriendRequestState_WAIT_FOR_ACCEPT NewFriendRequestState = 0
	NewFriendRequestState_ACCEPTED        NewFriendRequestState = 1
	NewFriendRequestState_REJECTED        NewFriendRequestState = 2
)

// Enum value maps for NewFriendRequestState.
var (
	NewFriendRequestState_name = map[int32]string{
		0: "WAIT_FOR_ACCEPT",
		1: "ACCEPTED",
		2: "REJECTED",
	}
	NewFriendRequestState_value = map[string]int32{
		"WAIT_FOR_ACCEPT": 0,
		"ACCEPTED":        1,
		"REJECTED":        2,
	}
)

func (x NewFriendRequestState) Enum() *NewFriendRequestState {
	p := new(NewFriendRequestState)
	*p = x
	return p
}

func (x NewFriendRequestState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewFriendRequestState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_FriendManager_proto_enumTypes[0].Descriptor()
}

func (NewFriendRequestState) Type() protoreflect.EnumType {
	return &file_proto_FriendManager_proto_enumTypes[0]
}

func (x NewFriendRequestState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NewFriendRequestState.Descriptor instead.
func (NewFriendRequestState) EnumDescriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{0}
}

type NewFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      int64                 `protobuf:"varint,1,opt,name=requestId,proto3" json:"requestId,omitempty" bson:"requestId"`
	FromId         string                `protobuf:"bytes,2,opt,name=fromId,proto3" json:"fromId,omitempty" bson:"fromId"`
	ToId           string                `protobuf:"bytes,3,opt,name=toId,proto3" json:"toId,omitempty" bson:"toId"`
	State          NewFriendRequestState `protobuf:"varint,4,opt,name=state,proto3,enum=NewFriendRequestState" json:"state,omitempty" bson:"state"`
	Content        string                `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty" bson:"content"`
	FromRemarkName string                `protobuf:"bytes,6,opt,name=fromRemarkName,proto3" json:"fromRemarkName,omitempty" bson:"fromRemarkName"`
	ToRemarkName   string                `protobuf:"bytes,7,opt,name=toRemarkName,proto3" json:"toRemarkName,omitempty" bson:"toRemarkName"`
}

func (x *NewFriendRequest) Reset() {
	*x = NewFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFriendRequest) ProtoMessage() {}

func (x *NewFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFriendRequest.ProtoReflect.Descriptor instead.
func (*NewFriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{0}
}

func (x *NewFriendRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *NewFriendRequest) GetFromId() string {
	if x != nil {
		return x.FromId
	}
	return ""
}

func (x *NewFriendRequest) GetToId() string {
	if x != nil {
		return x.ToId
	}
	return ""
}

func (x *NewFriendRequest) GetState() NewFriendRequestState {
	if x != nil {
		return x.State
	}
	return NewFriendRequestState_WAIT_FOR_ACCEPT
}

func (x *NewFriendRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NewFriendRequest) GetFromRemarkName() string {
	if x != nil {
		return x.FromRemarkName
	}
	return ""
}

func (x *NewFriendRequest) GetToRemarkName() string {
	if x != nil {
		return x.ToRemarkName
	}
	return ""
}

type AcceptNewFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeed bool `protobuf:"varint,1,opt,name=succeed,proto3" json:"succeed,omitempty"`
}

func (x *AcceptNewFriendResponse) Reset() {
	*x = AcceptNewFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptNewFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptNewFriendResponse) ProtoMessage() {}

func (x *AcceptNewFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptNewFriendResponse.ProtoReflect.Descriptor instead.
func (*AcceptNewFriendResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{1}
}

func (x *AcceptNewFriendResponse) GetSucceed() bool {
	if x != nil {
		return x.Succeed
	}
	return false
}

type ChangeRemarkNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FriendId      string `protobuf:"bytes,2,opt,name=friendId,proto3" json:"friendId,omitempty"`
	NewRemarkName string `protobuf:"bytes,3,opt,name=newRemarkName,proto3" json:"newRemarkName,omitempty"`
}

func (x *ChangeRemarkNameRequest) Reset() {
	*x = ChangeRemarkNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRemarkNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRemarkNameRequest) ProtoMessage() {}

func (x *ChangeRemarkNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRemarkNameRequest.ProtoReflect.Descriptor instead.
func (*ChangeRemarkNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeRemarkNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChangeRemarkNameRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

func (x *ChangeRemarkNameRequest) GetNewRemarkName() string {
	if x != nil {
		return x.NewRemarkName
	}
	return ""
}

type ChangeRemarkNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFriend bool `protobuf:"varint,1,opt,name=isFriend,proto3" json:"isFriend,omitempty"`
	Succeed  bool `protobuf:"varint,2,opt,name=succeed,proto3" json:"succeed,omitempty"`
}

func (x *ChangeRemarkNameResponse) Reset() {
	*x = ChangeRemarkNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRemarkNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRemarkNameResponse) ProtoMessage() {}

func (x *ChangeRemarkNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRemarkNameResponse.ProtoReflect.Descriptor instead.
func (*ChangeRemarkNameResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{3}
}

func (x *ChangeRemarkNameResponse) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

func (x *ChangeRemarkNameResponse) GetSucceed() bool {
	if x != nil {
		return x.Succeed
	}
	return false
}

type CheckFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TargetId string `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
}

func (x *CheckFriendRequest) Reset() {
	*x = CheckFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFriendRequest) ProtoMessage() {}

func (x *CheckFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFriendRequest.ProtoReflect.Descriptor instead.
func (*CheckFriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{4}
}

func (x *CheckFriendRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CheckFriendRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type CheckFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFriend   bool   `protobuf:"varint,1,opt,name=isFriend,proto3" json:"isFriend,omitempty"`
	RemarkName string `protobuf:"bytes,2,opt,name=remarkName,proto3" json:"remarkName,omitempty"`
}

func (x *CheckFriendResponse) Reset() {
	*x = CheckFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFriendResponse) ProtoMessage() {}

func (x *CheckFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFriendResponse.ProtoReflect.Descriptor instead.
func (*CheckFriendResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{5}
}

func (x *CheckFriendResponse) GetIsFriend() bool {
	if x != nil {
		return x.IsFriend
	}
	return false
}

func (x *CheckFriendResponse) GetRemarkName() string {
	if x != nil {
		return x.RemarkName
	}
	return ""
}

type DeleteFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FriendId string `protobuf:"bytes,2,opt,name=friendId,proto3" json:"friendId,omitempty"`
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFriendRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

type DeleteFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeed bool `protobuf:"varint,1,opt,name=succeed,proto3" json:"succeed,omitempty"`
}

func (x *DeleteFriendResponse) Reset() {
	*x = DeleteFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResponse) ProtoMessage() {}

func (x *DeleteFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteFriendResponse) GetSucceed() bool {
	if x != nil {
		return x.Succeed
	}
	return false
}

type GetFriendsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFriendsRequest) Reset() {
	*x = GetFriendsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsRequest) ProtoMessage() {}

func (x *GetFriendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendsRequest) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{8}
}

func (x *GetFriendsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetFriendsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetFriendsResponse) Reset() {
	*x = GetFriendsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsResponse) ProtoMessage() {}

func (x *GetFriendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendsResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{9}
}

func (x *GetFriendsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetNewFriendRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetNewFriendRequestsRequest) Reset() {
	*x = GetNewFriendRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewFriendRequestsRequest) ProtoMessage() {}

func (x *GetNewFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetNewFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{10}
}

func (x *GetNewFriendRequestsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNewFriendRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*NewFriendRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetNewFriendRequestsResponse) Reset() {
	*x = GetNewFriendRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewFriendRequestsResponse) ProtoMessage() {}

func (x *GetNewFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetNewFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{11}
}

func (x *GetNewFriendRequestsResponse) GetRequests() []*NewFriendRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type RejectNewFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeed bool `protobuf:"varint,1,opt,name=succeed,proto3" json:"succeed,omitempty"`
}

func (x *RejectNewFriendResponse) Reset() {
	*x = RejectNewFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectNewFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectNewFriendResponse) ProtoMessage() {}

func (x *RejectNewFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectNewFriendResponse.ProtoReflect.Descriptor instead.
func (*RejectNewFriendResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{12}
}

func (x *RejectNewFriendResponse) GetSucceed() bool {
	if x != nil {
		return x.Succeed
	}
	return false
}

type SendNewFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeed bool `protobuf:"varint,1,opt,name=succeed,proto3" json:"succeed,omitempty"`
}

func (x *SendNewFriendRequestResponse) Reset() {
	*x = SendNewFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_FriendManager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNewFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNewFriendRequestResponse) ProtoMessage() {}

func (x *SendNewFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_FriendManager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNewFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*SendNewFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_proto_FriendManager_proto_rawDescGZIP(), []int{13}
}

func (x *SendNewFriendRequestResponse) GetSucceed() bool {
	if x != nil {
		return x.Succeed
	}
	return false
}

var File_proto_FriendManager_proto protoreflect.FileDescriptor

var file_proto_FriendManager_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x10,
	0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x4e, 0x65, 0x77, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x6f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33,
	0x0a, 0x17, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x65, 0x64, 0x22, 0x6b, 0x0a, 0x17, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x65,
	0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x50, 0x0a, 0x18, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x65, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x13, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x14, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x22, 0x23, 0x0a, 0x11,
	0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x26, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2d, 0x0a, 0x1b, 0x67, 0x65, 0x74,
	0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x1c, 0x67, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4e, 0x65, 0x77,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x22, 0x38, 0x0a, 0x1c,
	0x73, 0x65, 0x6e, 0x64, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x2a, 0x48, 0x0a, 0x15, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x41, 0x43, 0x43, 0x45,
	0x50, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x32, 0xb5, 0x04, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x40, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4e, 0x65, 0x77, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x13,
	0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x2e, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x67, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x2e, 0x67, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x11, 0x2e,
	0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x14,
	0x73, 0x65, 0x6e, 0x64, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x11, 0x2e, 0x4e, 0x65, 0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x4e, 0x65,
	0x77, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_FriendManager_proto_rawDescOnce sync.Once
	file_proto_FriendManager_proto_rawDescData = file_proto_FriendManager_proto_rawDesc
)

func file_proto_FriendManager_proto_rawDescGZIP() []byte {
	file_proto_FriendManager_proto_rawDescOnce.Do(func() {
		file_proto_FriendManager_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_FriendManager_proto_rawDescData)
	})
	return file_proto_FriendManager_proto_rawDescData
}

var file_proto_FriendManager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_FriendManager_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_FriendManager_proto_goTypes = []interface{}{
	(NewFriendRequestState)(0),           // 0: NewFriendRequestState
	(*NewFriendRequest)(nil),             // 1: NewFriendRequest
	(*AcceptNewFriendResponse)(nil),      // 2: acceptNewFriendResponse
	(*ChangeRemarkNameRequest)(nil),      // 3: changeRemarkNameRequest
	(*ChangeRemarkNameResponse)(nil),     // 4: changeRemarkNameResponse
	(*CheckFriendRequest)(nil),           // 5: checkFriendRequest
	(*CheckFriendResponse)(nil),          // 6: checkFriendResponse
	(*DeleteFriendRequest)(nil),          // 7: deleteFriendRequest
	(*DeleteFriendResponse)(nil),         // 8: deleteFriendResponse
	(*GetFriendsRequest)(nil),            // 9: getFriendsRequest
	(*GetFriendsResponse)(nil),           // 10: getFriendsResponse
	(*GetNewFriendRequestsRequest)(nil),  // 11: getNewFriendRequestsRequest
	(*GetNewFriendRequestsResponse)(nil), // 12: getNewFriendRequestsResponse
	(*RejectNewFriendResponse)(nil),      // 13: rejectNewFriendResponse
	(*SendNewFriendRequestResponse)(nil), // 14: sendNewFriendRequestResponse
}
var file_proto_FriendManager_proto_depIdxs = []int32{
	0,  // 0: NewFriendRequest.state:type_name -> NewFriendRequestState
	1,  // 1: getNewFriendRequestsResponse.requests:type_name -> NewFriendRequest
	1,  // 2: FriendManager.acceptNewFriend:input_type -> NewFriendRequest
	3,  // 3: FriendManager.changeRemarkName:input_type -> changeRemarkNameRequest
	5,  // 4: FriendManager.checkFriend:input_type -> checkFriendRequest
	7,  // 5: FriendManager.deleteFriend:input_type -> deleteFriendRequest
	9,  // 6: FriendManager.getFriends:input_type -> getFriendsRequest
	11, // 7: FriendManager.getNewFriendRequests:input_type -> getNewFriendRequestsRequest
	1,  // 8: FriendManager.rejectNewFriend:input_type -> NewFriendRequest
	1,  // 9: FriendManager.sendNewFriendRequest:input_type -> NewFriendRequest
	2,  // 10: FriendManager.acceptNewFriend:output_type -> acceptNewFriendResponse
	4,  // 11: FriendManager.changeRemarkName:output_type -> changeRemarkNameResponse
	6,  // 12: FriendManager.checkFriend:output_type -> checkFriendResponse
	8,  // 13: FriendManager.deleteFriend:output_type -> deleteFriendResponse
	10, // 14: FriendManager.getFriends:output_type -> getFriendsResponse
	12, // 15: FriendManager.getNewFriendRequests:output_type -> getNewFriendRequestsResponse
	13, // 16: FriendManager.rejectNewFriend:output_type -> rejectNewFriendResponse
	14, // 17: FriendManager.sendNewFriendRequest:output_type -> sendNewFriendRequestResponse
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_FriendManager_proto_init() }
func file_proto_FriendManager_proto_init() {
	if File_proto_FriendManager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_FriendManager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptNewFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRemarkNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRemarkNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewFriendRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewFriendRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectNewFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_FriendManager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNewFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_FriendManager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_FriendManager_proto_goTypes,
		DependencyIndexes: file_proto_FriendManager_proto_depIdxs,
		EnumInfos:         file_proto_FriendManager_proto_enumTypes,
		MessageInfos:      file_proto_FriendManager_proto_msgTypes,
	}.Build()
	File_proto_FriendManager_proto = out.File
	file_proto_FriendManager_proto_rawDesc = nil
	file_proto_FriendManager_proto_goTypes = nil
	file_proto_FriendManager_proto_depIdxs = nil
}
